// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MarsApplicationOnboarding.MarsQA_1.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Language")]
    public partial class LanguageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "LanguageFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MarsQA-1/Features", "Language", "As a user, I need to manage my language details in my profile\r\nso that I can perf" +
                    "orm actions such as add, edit, or delete my language records", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 Add Languages and language level for user profile")]
        [NUnit.Framework.TestCaseAttribute("\'English\'", "\'Fluent\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'Hindi\'", "\'Conversational\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'French\'", "\'Basic\'", null)]
        [NUnit.Framework.TestCaseAttribute("\'Telugu\'", "\'Native/Bilingual\'", null)]
        public void _1AddLanguagesAndLanguageLevelForUserProfile(string language, string languagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 Add Languages and language level for user profile", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.When(string.Format("User add {0} and {1}", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.Then(string.Format("{0} and {1} should be added succesfully", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2  Add Language record with already existing data")]
        [NUnit.Framework.TestCaseAttribute("\'Hindi\'", "\'Basic\'", "\'Hindi\'", "\'Basic\'", null)]
        public void _2AddLanguageRecordWithAlreadyExistingData(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2  Add Language record with already existing data", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 19
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 20
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 21
 testRunner.When(string.Format("User tries to add new record {0} and {1} for already existing {2} and {3}", newlanguage, newlanguagelevel, language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.Then("User should get an error This language is already exist in your language list.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3 Add Language record with invalid language and valid language level")]
        [NUnit.Framework.TestCaseAttribute("\'\'", "\'Conversational\'", null)]
        public void _3AddLanguageRecordWithInvalidLanguageAndValidLanguageLevel(string language, string languagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3 Add Language record with invalid language and valid language level", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 29
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 30
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 31
 testRunner.When(string.Format("User tries to add new record with invalid {0} and valid {1}", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
 testRunner.Then("User should get an error Please enter language and level", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("4 Add Language record with valid language and invalid language level")]
        [NUnit.Framework.TestCaseAttribute("\'French\'", "\'\'", null)]
        public void _4AddLanguageRecordWithValidLanguageAndInvalidLanguageLevel(string language, string languagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4 Add Language record with valid language and invalid language level", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 38
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 39
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
 testRunner.When(string.Format("User tries to add new record with valid data {0} and invalid {1}", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
 testRunner.Then("User should get an error Please enter language and level", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("5 Add Language record with invalid language and invalid language level")]
        [NUnit.Framework.TestCaseAttribute("\'\'", "\'\'", null)]
        public void _5AddLanguageRecordWithInvalidLanguageAndInvalidLanguageLevel(string language, string languagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5 Add Language record with invalid language and invalid language level", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 46
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 47
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 48
 testRunner.When(string.Format("User tries to add new record with invalid {0} and invalid {1}", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.Then("User should get an error Please enter language and level", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("6 Add Language record with language of extreme long input")]
        [NUnit.Framework.TestCaseAttribute(@"'EnglishHindiTeluguSpanishFrenchGermanItalianChineseArabicRussianJapaneseKoreanPortugueseDutchSwedishNorwegianDanishFinnishPolishTurkishGreekHebrewThaiVietnameseIndonesianMalayBengaliPunjabiUrduSwahiliZuluXhosaCzechHungarianRomanianBulgarianSerbianCroatianSlovakUkrainianLithuanianLatvianEstonianCatalanBasqueGalicianWelshIrishScottish'", "\'Basic\'", null)]
        public void _6AddLanguageRecordWithLanguageOfExtremeLongInput(string language, string languagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("6 Add Language record with language of extreme long input", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 54
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 55
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
 testRunner.When(string.Format("User tries to add new record with extreme long{0} and valid {1}", language, languagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.Then(string.Format("{0} record should not be added", language), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("7 Edit Languages and Language level")]
        [NUnit.Framework.TestCaseAttribute("\'Hindi\'", "\'Basic\'", "\'English\'", "\'Conversational\'", null)]
        public void _7EditLanguagesAndLanguageLevel(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("7 Edit Languages and Language level", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 62
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 63
 testRunner.Given("User Login to the Application and navigates to language section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.When(string.Format("User edits the record with {0} and {1} to {2} and {3}", language, languagelevel, newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.Then(string.Format("User Should be able to update profile with modified {0} and {1} values", newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("8 Edit Language record without changing existing language and language level")]
        [NUnit.Framework.TestCaseAttribute("\'Hindi\'", "\'Basic\'", "\'Hindi\'", "\'Basic\'", null)]
        public void _8EditLanguageRecordWithoutChangingExistingLanguageAndLanguageLevel(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("8 Edit Language record without changing existing language and language level", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 71
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 72
 testRunner.Given("User is logged in and navigates to profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 73
 testRunner.When(string.Format("User tries to update existing record without editing {0} or {1} to {2} and {3}", language, languagelevel, newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.Then("User should get an error This language is already added to your language list.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("9 Edit Language record with blank language")]
        [NUnit.Framework.TestCaseAttribute("\'Telugu\'", "\'Basic\'", "\'\'", "\'Language Level\'", null)]
        public void _9EditLanguageRecordWithBlankLanguage(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("9 Edit Language record with blank language", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 79
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 80
 testRunner.Given("User is logged in and navigates to profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 81
 testRunner.When(string.Format("User tries to update existing record {0} {1} with blank {2} {3}", language, languagelevel, newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 82
 testRunner.Then("User should get an error Please enter language and level", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10 Edit Language record with blank languagelevel")]
        [NUnit.Framework.TestCaseAttribute("\'Hindi\'", "\'Basic\'", "\'Telugu\'", "\'Language Level\'", null)]
        public void _10EditLanguageRecordWithBlankLanguagelevel(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 Edit Language record with blank languagelevel", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 89
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 90
 testRunner.Given("User is logged in and navigates to profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 91
 testRunner.When(string.Format("User tries to update existing record {0} {1} with  {2} and blank {3}", language, languagelevel, newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.Then("User should get an error Please enter language and level", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11  Edit Language record with language of extreme long binary input")]
        [NUnit.Framework.TestCaseAttribute("\'English\'", "\'Fluentluent\'", null)]
        public void _11EditLanguageRecordWithLanguageOfExtremeLongBinaryInput(string language, string languagelevel, string newlanguage, string newlanguagelevel, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("languagelevel", languagelevel);
            argumentsOfScenario.Add("newlanguage", newlanguage);
            argumentsOfScenario.Add("newlanguagelevel", newlanguagelevel);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11  Edit Language record with language of extreme long binary input", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 97
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 98
 testRunner.Given("User is logged in and navigates to profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 99
 testRunner.When(string.Format("User tries to update existing record of {0} {1} with new record with extreme long" +
                            " binary input {2} and {3}", language, languagelevel, newlanguage, newlanguagelevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 100
 testRunner.Then(string.Format("language record should not be edited with {0}", newlanguage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete Existing Languages from User Profile")]
        [NUnit.Framework.TestCaseAttribute("\'English\'", "\'Fluent\'", null)]
        public void DeleteExistingLanguagesFromUserProfile(string language, string level, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("language", language);
            argumentsOfScenario.Add("level", level);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete Existing Languages from User Profile", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 105
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 106
 testRunner.Given("User is logged in and navigates to delete section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 107
 testRunner.When(string.Format("User deletes {0} and {1} from profile", language, level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 108
 testRunner.Then(string.Format("{0} Should be deleted", language), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
